@page "/login"

@using Thryft.Models
@using Thryft.Services
@inject UserService userService
@inject NavigationManager navigationManager
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations

<PageTitle>Login</PageTitle>

<MudGrid>
    <MudItem xs="12" sm="7">
        <MudCard Class="pa-4">
            <MudForm @ref="form">
                <MudTextField T="string" Label="Email" RequiredError="Email is required!" @bind-Value="email" Immediate="true"
                              Validation="@(new EmailAddressAttribute() {ErrorMessage = "The email address is invalid"})" />
        
                <MudTextField T="string" Label="Password" InputType="InputType.Password" @bind-Value="password" @ref="pwField"
                              Validation="@(new Func<string, IEnumerable<string>>(PasswordStrength))" Immediate="true"
                              RequiredError="Password is required!" />
            </MudForm>
        </MudCard>
        <MudSpacer/>
            <MudButton Variant="Variant.Filled" Color="Color.Primary" OnClick="@(() => form.Validate())">Login</MudButton>
        <MudSpacer />
    </MudItem>
    <MudSpacer />
</MudGrid>

@code {

    MudForm form;
    private string email;
    private string password;

    protected override async Task OnInitializedAsync()
    {
        var user = await userService.ValidateUserCredentialsAsync(email, password);
    }







    MudTextField<string> pwField;
    MudTextField<string> emField;

    private IEnumerable<string> PasswordStrength(string pw)
    {
        if (string.IsNullOrWhiteSpace(pw))
        {
            yield return "Password is required!";
            yield break;
        }
        if (pw.Length < 8)
            yield return "Password must be at least of length 8";
        if (!Regex.IsMatch(pw, @"[A-Z]"))
            yield return "Password must contain at least one capital letter";
        if (!Regex.IsMatch(pw, @"[a-z]"))
            yield return "Password must contain at least one lowercase letter";
        if (!Regex.IsMatch(pw, @"[0-9]"))
            yield return "Password must contain at least one digit";
    }
}