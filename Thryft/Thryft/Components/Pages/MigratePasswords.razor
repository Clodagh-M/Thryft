@page "/migrate-passwords"
@using Thryft.Services
@inject UserService userService
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Migrate Passwords</PageTitle>

<MudContainer>
    <MudCard>
        <MudCardContent>
            @if (isMigrating)
            {
                <MudText>Migrating passwords...</MudText>
                <MudProgressLinear Indeterminate="true" />
            }
            else if (!string.IsNullOrEmpty(message))
            {
                <MudText>@message</MudText>
                <MudButton OnClick="GoHome" Variant="Variant.Filled" Color="Color.Primary">
                    Go Home
                </MudButton>
            }
            else
            {
                <MudText>Click the button below to migrate existing passwords to hashed format.</MudText>
                <MudButton OnClick="Migrate" Variant="Variant.Filled" Color="Color.Warning">
                    Migrate Passwords
                </MudButton>
            }
        </MudCardContent>
    </MudCard>
</MudContainer>

@code {
    private bool isMigrating = false;
    private string message = "";

    private async Task Migrate()
    {
        isMigrating = true;
        StateHasChanged();

        try
        {
            // Add the migration method to your UserService first
            await userService.MigrateExistingPasswords();
            message = "Password migration completed successfully!";
        }
        catch (Exception ex)
        {
            message = $"Migration failed: {ex.Message}";
        }
        finally
        {
            isMigrating = false;
            StateHasChanged();
        }
    }

    private void GoHome()
    {
        navigationManager.NavigateTo("/");
    }
}